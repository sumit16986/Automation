{
	"info": {
		"name": " StripeAPI",
		"_postman_id": "e26f8303-2503-7d6e-ecff-303bcc2718db",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "accessStripeApiWithoutLoggingIn",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"CHEKE STATUSS CODE IS 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"ManualTestCase\", function () {",
							"    pm.response.to.have.status(\"Unauthorized\");",
							"});",
							"",
							"pm.test(\"CHEKE RESPONCE TIME IS LESS THAN 400ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(40000);",
							"});",
							"",
							"",
							"pm.test(\"CHEKE BODY MATCHES STRING\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"invalid_request_error\");",
							"});",
							"",
							"",
							"var time= new Date();",
							"console.log(time);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{Host1}}/v1/charges/",
					"host": [
						"{{Host1}}"
					],
					"path": [
						"v1",
						"charges",
						""
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "accessStripeApiWithoutLoggingInnew",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"CHEKE STATUSS CODE IS 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"ManualTestCase\", function () {",
							"    pm.response.to.have.status(\"Unauthorized\");",
							"});",
							"",
							"pm.test(\"CHEKE RESPONCE TIME IS LESS THAN 4000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(40000);",
							"});",
							"",
							"",
							"pm.test(\"CHEKE BODY MATCHES STRING\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"invalid_request_error\");",
							"});",
							"",
							"",
							"var time= new Date();",
							"console.log(time);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{Host1}}/v1/charges/",
					"host": [
						"{{Host1}}"
					],
					"path": [
						"v1",
						"charges",
						""
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "accessStripeApiWithoutLoggingInnew1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"CHEKE STATUSS CODE IS 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"ManualTestCase\", function () {",
							"    pm.response.to.have.status(\"Unauthorized\");",
							"});",
							"",
							"pm.test(\"CHEKE RESPONCE TIME IS LESS THAN 4000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(40000);",
							"});",
							"",
							"",
							"pm.test(\"CHEKE BODY MATCHES STRING\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"invalid_request_error\");",
							"});",
							"",
							"",
							"var time= new Date();",
							"console.log(time);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{Host1}}/v1/charges/",
					"host": [
						"{{Host1}}"
					],
					"path": [
						"v1",
						"charges",
						""
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "accessStripeApiWithoutLoggingInnew2",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"CHEKE STATUSS CODE IS 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"ManualTestCase\", function () {",
							"    pm.response.to.have.status(\"Unauthorized\");",
							"});",
							"",
							"pm.test(\"CHEKE RESPONCE TIME IS LESS THAN 4000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(40000);",
							"});",
							"",
							"",
							"pm.test(\"CHEKE BODY MATCHES STRING\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"invalid_request_error\");",
							"});",
							"",
							"",
							"var time= new Date();",
							"console.log(time);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{Host1}}/v1/charges/",
					"host": [
						"{{Host1}}"
					],
					"path": [
						"v1",
						"charges",
						""
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}